kafka.client {
  producer.settings {
    bootstrap.servers = ${?BOOTSTRAP_SERVERS},
    bootstrap.servers = "kafka1:9092",
    acks = "all",
    retries = 0,
    batch.size = 16384,
    auto.commit.interval.ms = 1000,
    linger.ms = 0,
    key.serializer = "org.apache.kafka.common.serialization.StringSerializer",
    value.serializer = "org.apache.kafka.common.serialization.StringSerializer",
    block.on.buffer.full = true
  }

  consumer {
    pollFrequency = "100 millis"
    settings {
      bootstrap.servers = ${?BOOTSTRAP_SERVERS},
      bootstrap.servers = "kafka1:9092",
      group.id = "kafkars",
      enable.auto.commit = true,
      key.deserializer = "org.apache.kafka.common.serialization.StringDeserializer",
      value.deserializer = "org.apache.kafka.common.serialization.StringDeserializer",
      auto.offset.reset = "earliest"
    }
  }

  queues {
    inbound = "responseInbound"
  }

}



akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  loglevel = "INFO"
}